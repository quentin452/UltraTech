// Date: 31/08/2014 2:56:02
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package common.cout970.UltraTech.client.models;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelPumpJack extends ModelBase
{
  //fields
    ModelRenderer base;
    ModelRenderer pole;
    ModelRenderer head;
    ModelRenderer eje;
    ModelRenderer suport1;
    ModelRenderer suport2;
    ModelRenderer suport3;
    ModelRenderer suport4;
    ModelRenderer motor;
    ModelRenderer ejegear;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer hard1;
    ModelRenderer hard2;
    ModelRenderer piston;
    ModelRenderer cable;
  
  public ModelPumpJack()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      base = new ModelRenderer(this, 0, 0);
      base.addBox(-16F, 0F, -16F, 32, 1, 32);
      base.setRotationPoint(0F, 23F, 0F);
      base.setTextureSize(128, 64);
      base.mirror = true;
      setRotation(base, 0F, 0F, 0F);
      pole = new ModelRenderer(this, 0, 33);
      pole.addBox(-12F, -4F, -2F, 24, 4, 4);
      pole.setRotationPoint(0F, 6F, 0F);
      pole.setTextureSize(128, 64);
      pole.mirror = true;
      setRotation(pole, 0F, 0F, 0F);
      head = new ModelRenderer(this, 0, 41);
      head.addBox(12F, -10F, -2F, 4, 16, 4);
      head.setRotationPoint(0F, 6F, 0F);
      head.setTextureSize(128, 64);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      eje = new ModelRenderer(this, 16, 41);
      eje.addBox(-1F, 0F, 0F, 2, 2, 8);
      eje.setRotationPoint(0F, 6F, -4F);
      eje.setTextureSize(128, 64);
      eje.mirror = true;
      setRotation(eje, 0F, 0F, 0F);
      suport1 = new ModelRenderer(this, 56, 33);
      suport1.addBox(0F, 0F, -4F, 1, 17, 1);
      suport1.setRotationPoint(0F, 7F, 0F);
      suport1.setTextureSize(128, 64);
      suport1.mirror = true;
      setRotation(suport1, 0F, 0F, -0.2617994F);
      suport2 = new ModelRenderer(this, 56, 33);
      suport2.addBox(-1F, 0F, -4F, 1, 17, 1);
      suport2.setRotationPoint(0F, 7F, 0F);
      suport2.setTextureSize(128, 64);
      suport2.mirror = true;
      setRotation(suport2, 0F, 0F, 0.2617994F);
      suport3 = new ModelRenderer(this, 56, 33);
      suport3.addBox(0F, 0F, 3F, 1, 17, 1);
      suport3.setRotationPoint(0F, 7F, 0F);
      suport3.setTextureSize(128, 64);
      suport3.mirror = true;
      setRotation(suport3, 0F, 0F, -0.2617994F);
      suport4 = new ModelRenderer(this, 56, 33);
      suport4.addBox(-1F, 0F, 3F, 1, 17, 1);
      suport4.setRotationPoint(0F, 7F, 0F);
      suport4.setTextureSize(128, 64);
      suport4.mirror = true;
      setRotation(suport4, 0F, 0F, 0.2617994F);
      motor = new ModelRenderer(this, 60, 33);
      motor.addBox(0F, 0F, 0F, 6, 8, 4);
      motor.setRotationPoint(-15F, 15F, -2F);
      motor.setTextureSize(128, 64);
      motor.mirror = true;
      setRotation(motor, 0F, 0F, 0F);
      ejegear = new ModelRenderer(this, 36, 41);
      ejegear.addBox(-12F, 0F, -3F, 1, 1, 6);
      ejegear.setRotationPoint(0F, 6F, 0F);
      ejegear.setTextureSize(128, 64);
      ejegear.mirror = true;
      setRotation(ejegear, 0F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 0, 61);
      Shape1.addBox(-0.5F, -0.5F, 2F, 4, 1, 1);
      Shape1.setRotationPoint(-12F, 16.5F, 0F);
      Shape1.setTextureSize(128, 64);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
      Shape2 = new ModelRenderer(this, 0, 61);
      Shape2.addBox(-0.5F, -0.5F, -1F, 4, 1, 1);
      Shape2.setRotationPoint(-12F, 16.5F, -2F);
      Shape2.setTextureSize(128, 64);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0F);
      hard1 = new ModelRenderer(this, 124, 51);
      hard1.addBox(-0.5F, -0.5F, 0F, 1, 12, 1);
      hard1.setRotationPoint(-11.5F, 6F, 3F);
      hard1.setTextureSize(128, 64);
      hard1.mirror = true;
      setRotation(hard1, 0F, 0F, -0.2617994F);
      hard2 = new ModelRenderer(this, 124, 51);
      hard2.addBox(-0.5F, -0.5F, -1F, 1, 12, 1);
      hard2.setRotationPoint(-11.5F, 6F, -3F);
      hard2.setTextureSize(128, 64);
      hard2.mirror = true;
      setRotation(hard2, 0F, 0F, -0.2617994F);
      piston = new ModelRenderer(this, 16, 51);
      piston.addBox(-1F, -2F, -1F, 2, 4, 2);
      piston.setRotationPoint(14F, 21F, 0F);
      piston.setTextureSize(128, 64);
      piston.mirror = true;
      setRotation(piston, 0F, 0F, 0F);
      cable = new ModelRenderer(this, 80, 33);
      cable.addBox(-0.5F, 0F, -0.5F, 1, 11, 1);
      cable.setRotationPoint(14F, 8F, 0F);
      cable.setTextureSize(128, 64);
      cable.mirror = true;
      setRotation(cable, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    base.render(f5);
    pole.render(f5);
    head.render(f5);
    eje.render(f5);
    suport1.render(f5);
    suport2.render(f5);
    suport3.render(f5);
    suport4.render(f5);
    motor.render(f5);
    ejegear.render(f5);
    Shape1.render(f5);
    Shape2.render(f5);
    hard1.render(f5);
    hard2.render(f5);
    piston.render(f5);
    cable.render(f5);
  }
  
  public void render(float f5, float animationMoment){
	  float perone = animationMoment/1000;
	  float x = (float) (15*Math.sin(Math.toRadians(360*perone)));
	  float gire = 360*perone-180f;
	  float hardAngle = (float) (-15*Math.sin(Math.toRadians(360*perone-90)))+2f;
	  float v = (float) (3f*Math.sin(Math.toRadians(360*perone-180)));
	  float y = f5*v;
	  GL11.glPushMatrix();
	  GL11.glScalef(1.25f, 1, 0.251f);
	  base.render(f5);
	  GL11.glPopMatrix();
	  pole.rotateAngleZ = (float) Math.toRadians(x);
	  pole.render(f5);
	  head.rotateAngleZ = (float) Math.toRadians(x);
	  head.render(f5);
	  eje.render(f5);
	  suport1.render(f5);
	  suport2.render(f5);
	  suport3.render(f5);
	  suport4.render(f5);
	  motor.render(f5);
	  ejegear.rotateAngleZ = (float) Math.toRadians(x);
	  ejegear.render(f5);
	  Shape1.rotateAngleZ = (float) Math.toRadians(gire);
	  Shape1.render(f5);
	  Shape2.rotateAngleZ = (float) Math.toRadians(gire);
	  Shape2.render(f5);
	  GL11.glPushMatrix();
	  GL11.glTranslatef(0, y, 0);
	  hard1.rotateAngleZ = (float) Math.toRadians(hardAngle);
	  hard1.render(f5);
	  hard2.rotateAngleZ = (float) Math.toRadians(hardAngle);
	  hard2.render(f5);
	  GL11.glPopMatrix();
	  piston.render(f5);
	  cable.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
  }

}
